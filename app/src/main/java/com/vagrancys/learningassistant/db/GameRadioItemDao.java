package com.vagrancys.learningassistant.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.vargancys.learningassistant.bean.game.GameRadioItem;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "GAME_RADIO_ITEM".
*/
public class GameRadioItemDao extends AbstractDao<GameRadioItem, Long> {

    public static final String TABLENAME = "GAME_RADIO_ITEM";

    /**
     * Properties of entity GameRadioItem.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Title = new Property(1, String.class, "title", false, "TITLE");
        public final static Property Yes = new Property(2, int.class, "yes", false, "YES");
        public final static Property First_title = new Property(3, String.class, "first_title", false, "FIRST_TITLE");
        public final static Property Second_title = new Property(4, String.class, "second_title", false, "SECOND_TITLE");
        public final static Property Third_title = new Property(5, String.class, "third_title", false, "THIRD_TITLE");
        public final static Property Fourth_title = new Property(6, String.class, "fourth_title", false, "FOURTH_TITLE");
    }


    public GameRadioItemDao(DaoConfig config) {
        super(config);
    }
    
    public GameRadioItemDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"GAME_RADIO_ITEM\" (" + //
                "\"_id\" INTEGER PRIMARY KEY UNIQUE ," + // 0: id
                "\"TITLE\" TEXT," + // 1: title
                "\"YES\" INTEGER NOT NULL ," + // 2: yes
                "\"FIRST_TITLE\" TEXT," + // 3: first_title
                "\"SECOND_TITLE\" TEXT," + // 4: second_title
                "\"THIRD_TITLE\" TEXT," + // 5: third_title
                "\"FOURTH_TITLE\" TEXT);"); // 6: fourth_title
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"GAME_RADIO_ITEM\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, GameRadioItem entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(2, title);
        }
        stmt.bindLong(3, entity.getYes());
 
        String first_title = entity.getFirst_title();
        if (first_title != null) {
            stmt.bindString(4, first_title);
        }
 
        String second_title = entity.getSecond_title();
        if (second_title != null) {
            stmt.bindString(5, second_title);
        }
 
        String third_title = entity.getThird_title();
        if (third_title != null) {
            stmt.bindString(6, third_title);
        }
 
        String fourth_title = entity.getFourth_title();
        if (fourth_title != null) {
            stmt.bindString(7, fourth_title);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, GameRadioItem entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(2, title);
        }
        stmt.bindLong(3, entity.getYes());
 
        String first_title = entity.getFirst_title();
        if (first_title != null) {
            stmt.bindString(4, first_title);
        }
 
        String second_title = entity.getSecond_title();
        if (second_title != null) {
            stmt.bindString(5, second_title);
        }
 
        String third_title = entity.getThird_title();
        if (third_title != null) {
            stmt.bindString(6, third_title);
        }
 
        String fourth_title = entity.getFourth_title();
        if (fourth_title != null) {
            stmt.bindString(7, fourth_title);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public GameRadioItem readEntity(Cursor cursor, int offset) {
        GameRadioItem entity = new GameRadioItem( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // title
            cursor.getInt(offset + 2), // yes
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // first_title
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // second_title
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // third_title
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6) // fourth_title
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, GameRadioItem entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setTitle(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setYes(cursor.getInt(offset + 2));
        entity.setFirst_title(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSecond_title(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setThird_title(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setFourth_title(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(GameRadioItem entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(GameRadioItem entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(GameRadioItem entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
